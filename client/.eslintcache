[{"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\index.js":"1","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\App.js":"2","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\reportWebVitals.js":"3","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\AppHeader.js":"4","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\ApplicationViews.js":"6","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\QuizProvider.js":"7","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Register.js":"8","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Quiz.js":"9","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Login.js":"10","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\PostProvider.js":"11","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\TagProvider.js":"12","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\NewPost.js":"13","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Discover.js":"14","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\PostList.js":"15","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\PostCard.js":"16","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\TagList.js":"17","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\TagCard.js":"18","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\utils\\WindowChecker.js":"19","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\PostTagProvider.js":"20","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Search.js":"21","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\InspirationProvider.js":"22","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Inspiration.js":"23","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\InspirationButton.js":"24","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\RemoveInspBtn.js":"25","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\SubscriptionBtn.js":"26","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\SubProvider.js":"27","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Home.js":"28","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\RemoveSubBtn.js":"29","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Profile.js":"30","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\StyleProvider.js":"31","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\MyProfile.js":"32","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\ProfileSummary.js":"33","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\CommentProvider.js":"34","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\CommentList.js":"35","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\Comment.js":"36","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Rules.js":"37"},{"size":704,"mtime":1612562854307,"results":"38","hashOfConfig":"39"},{"size":779,"mtime":1612802655606,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":3408,"mtime":1613064211311,"results":"42","hashOfConfig":"39"},{"size":3506,"mtime":1612821032119,"results":"43","hashOfConfig":"39"},{"size":4253,"mtime":1613064233331,"results":"44","hashOfConfig":"39"},{"size":821,"mtime":1611952871632,"results":"45","hashOfConfig":"39"},{"size":5640,"mtime":1613064336060,"results":"46","hashOfConfig":"39"},{"size":4876,"mtime":1613064319946,"results":"47","hashOfConfig":"39"},{"size":2589,"mtime":1613064296888,"results":"48","hashOfConfig":"39"},{"size":2813,"mtime":1612892395266,"results":"49","hashOfConfig":"39"},{"size":853,"mtime":1612296254399,"results":"50","hashOfConfig":"39"},{"size":5624,"mtime":1612824556849,"results":"51","hashOfConfig":"39"},{"size":733,"mtime":1612638225818,"results":"52","hashOfConfig":"39"},{"size":311,"mtime":1612638918055,"results":"53","hashOfConfig":"39"},{"size":4988,"mtime":1612885364918,"results":"54","hashOfConfig":"39"},{"size":365,"mtime":1612637279736,"results":"55","hashOfConfig":"39"},{"size":461,"mtime":1612892314229,"results":"56","hashOfConfig":"39"},{"size":185,"mtime":1612209274162,"results":"57","hashOfConfig":"39"},{"size":2016,"mtime":1612296344805,"results":"58","hashOfConfig":"39"},{"size":1026,"mtime":1612892211670,"results":"59","hashOfConfig":"39"},{"size":1971,"mtime":1612807413525,"results":"60","hashOfConfig":"39"},{"size":993,"mtime":1612641224544,"results":"61","hashOfConfig":"39"},{"size":1611,"mtime":1612807101943,"results":"62","hashOfConfig":"39"},{"size":884,"mtime":1612807471451,"results":"63","hashOfConfig":"39"},{"size":1692,"mtime":1612807143927,"results":"64","hashOfConfig":"39"},{"size":2586,"mtime":1612807400671,"results":"65","hashOfConfig":"39"},{"size":940,"mtime":1612640839863,"results":"66","hashOfConfig":"39"},{"size":1021,"mtime":1612807425590,"results":"67","hashOfConfig":"39"},{"size":1957,"mtime":1612823540899,"results":"68","hashOfConfig":"39"},{"size":2146,"mtime":1612656435267,"results":"69","hashOfConfig":"39"},{"size":859,"mtime":1612819910756,"results":"70","hashOfConfig":"39"},{"size":1077,"mtime":1612822353063,"results":"71","hashOfConfig":"39"},{"size":1980,"mtime":1612846845129,"results":"72","hashOfConfig":"39"},{"size":7205,"mtime":1612891993448,"results":"73","hashOfConfig":"39"},{"size":4042,"mtime":1612847770304,"results":"74","hashOfConfig":"75"},{"size":1218,"mtime":1613064352683,"results":"76","hashOfConfig":"39"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"1oz23t8",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"79"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"79"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"79"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"79"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"79"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"79"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"79"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"79"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"79"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"79"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"79"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1pem0fl",{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\index.js",[],["165","166"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\App.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\reportWebVitals.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\AppHeader.js",["167"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\UserProfileProvider.js",["168"],"import React, { useState, useEffect, createContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Spinner } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const UserProfileContext = createContext();\r\n\r\nexport function UserProfileProvider(props) {\r\n  const apiUrl = \"/api/userprofile\";\r\n  const history = useHistory();\r\n\r\n  const userProfile = localStorage.getItem(\"userProfile\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\r\n  const [userSummary, setUserSummary] = useState();\r\n\r\n  const [isFirebaseReady, setIsFirebaseReady] = useState(false);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((u) => {\r\n      setIsFirebaseReady(true);\r\n    });\r\n  }, []);\r\n\r\n  const login = (email, pw) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, pw)\r\n      .then((signInResponse) => getUserProfile(signInResponse.user.uid))\r\n      .then((userProfile) => {\r\n        if (userProfile.approved === 1) {\r\n          localStorage.setItem(\"userProfile\", JSON.stringify(userProfile));\r\n          setIsLoggedIn(true);\r\n          return userProfile\r\n        } else if (userProfile.approved === 2) {\r\n          localStorage.setItem(\"userProfile\", JSON.stringify(userProfile))\r\n          setIsLoggedIn(true);\r\n          return userProfile\r\n        } else if (userProfile.approved === 0) {\r\n          setIsLoggedIn(false);\r\n          return userProfile\r\n        }\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    return firebase.auth().signOut()\r\n      .then(() => {\r\n        localStorage.clear()\r\n        setIsLoggedIn(false);\r\n      });\r\n  };\r\n\r\n  const register = (userProfile, password) => {\r\n    return firebase.auth().createUserWithEmailAndPassword(userProfile.email, password)\r\n      .then((createResponse) => saveUser({ ...userProfile, firebaseUserId: createResponse.user.uid }))\r\n      .then((savedUserProfile) => {\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile));\r\n        setIsLoggedIn(true);\r\n      });\r\n  };\r\n\r\n  const getToken = () => firebase.auth().currentUser.getIdToken();\r\n\r\n  const getUserProfile = (firebaseUserId) => {\r\n    return getToken().then((token) =>\r\n      fetch(`${apiUrl}/${firebaseUserId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }).then(resp => resp.json()));\r\n  };\r\n\r\n  const saveUser = (userProfile) => {\r\n    return getToken().then((token) =>\r\n      fetch(apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(userProfile)\r\n      }).then(resp => resp.json()));\r\n  };\r\n\r\n  const getCurrentUser = () => {\r\n    const user = localStorage.getItem(\"userProfile\");\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    return JSON.parse(user);\r\n  };\r\n\r\n  const getUserSummary = (id) => {\r\n    return getToken().then((token) => {\r\n      fetch(`${apiUrl}/getsummary/${id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }).then(resp => resp.json()).then(setUserSummary)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <UserProfileContext.Provider value={{ isLoggedIn, login, logout, register, getToken, getCurrentUser, getUserSummary, userSummary }}>\r\n      {isFirebaseReady\r\n        ? props.children\r\n        : <Spinner className=\"app-spinner dark\" />}\r\n    </UserProfileContext.Provider>\r\n  );\r\n}","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\ApplicationViews.js",["169","170","171","172"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\QuizProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Register.js",["173"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Quiz.js",["174","175"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Login.js",["176"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\PostProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\TagProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\NewPost.js",["177","178","179"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { TagContext } from \"../providers/TagProvider\"\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport WindowChecker from \"../utils/WindowChecker\";\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { FormGroup, Input } from \"reactstrap\"\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { PostTagContext } from \"../providers/PostTagProvider\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst NewPost = () => {\r\n  const { tags, getTags } = useContext(TagContext);\r\n  const { getToken } = useContext(UserProfileContext);\r\n  const { addPostTag } = useContext(PostTagContext);\r\n  const { style } = useContext(StyleContext);\r\n  const [multiSelections, setMultiSelections] = useState([]);\r\n  const [post, setPost] = useState([]);\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    WindowChecker()\r\n    getTags();\r\n  }, []);\r\n\r\n  const [imageLoading, setImageLoading] = useState(false)\r\n\r\n  const uploadImage = async e => {\r\n    const files = e.target.files\r\n    setImageLoading(true)\r\n    const data = new FormData()\r\n    data.append('file', files[0])\r\n    data.append('upload_preset', 'z0vejl5n')\r\n    const res = await fetch(\r\n      'https://api.cloudinary.com/v1_1/dddadzenw/image/upload',\r\n      {\r\n        method: \"POST\",\r\n        body: data\r\n      }\r\n    )\r\n    const file = await res.json()\r\n    let image = file.secure_url\r\n    const newImage = localStorage.setItem(\"image\", image);\r\n\r\n    setImageLoading(false)\r\n    const matches = document.querySelectorAll(\".hidden\");\r\n    for (const m of matches) {\r\n      m.style.display = \"inline-block\"\r\n    }\r\n\r\n    document.querySelector(\".notHidden\").style.display = \"none\"\r\n  }\r\n\r\n  const submitPost = (post) => {\r\n    setLoading(true)\r\n    getToken().then((token) => {\r\n      fetch(`/api/post`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(post)\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          for (const tag of multiSelections) {\r\n            const postId = res.id;\r\n            const tagId = tag.id;\r\n            const postTag = {\r\n              postId,\r\n              tagId\r\n            };\r\n            addPostTag(postTag)\r\n          }\r\n        })\r\n        .then((data) => {\r\n          history.push(`/discover`)\r\n          setLoading(false)\r\n        })\r\n        .then(localStorage.removeItem(\"image\"))\r\n    })\r\n  }\r\n\r\n  const handleControlledInputChange = (event) => {\r\n    const newPost = { ...post }\r\n    newPost[event.target.name] = event.target.value\r\n    setPost(newPost)\r\n  }\r\n\r\n  const handleClickSubmitPost = (event) => {\r\n    event.preventDefault()\r\n    post.imageLocation = localStorage.getItem(\"image\");\r\n\r\n    const user = JSON.parse(localStorage.getItem('userProfile'));\r\n    if (user == null) {\r\n      history.push(\"/login\")\r\n    }\r\n    else {\r\n      submitPost(post)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <section className={`new-post-form-container new-post-form-container${style.child}`}>\r\n      <div className={`new-post-form-area${style.child} new-post-form-area`}>\r\n        <h2 className=\"new-post-form-title\">Create A New Post</h2>\r\n        <form id=\"newPostForm\" onSubmit={(e) => { handleClickSubmitPost(e) }}>\r\n          <fieldset>\r\n            <div className=\"form-group uploadForm\">\r\n              <div className='defaultImageContainer'>\r\n                <img className='defaultImage' src={localStorage.image ? localStorage.image : 'https://build.dfomer.com/wp-content/uploads/2016/04/dummy-post-horisontal-thegem-blog-default.jpg'} />\r\n              </div>\r\n              {imageLoading ? (\r\n                <h6 className=\"loadingImage\">Loading...</h6>\r\n              ) : <></>}\r\n              <br />\r\n              <label htmlFor=\"embedpollfileinput\" className={`btn btn-info notHidden uploadButton dangerBtn${style.child}`}>\r\n                Upload image\r\n              </label>\r\n              <input hidden type=\"file\" onChange={uploadImage} className=\"inputfile\" id=\"embedpollfileinput\" />\r\n            </div>\r\n          </fieldset>\r\n          <fieldset>\r\n            <div className=\"form-group hidden w-100 h-100\">\r\n              <FormGroup>\r\n                <label className=\"new-post-label\" htmlFor=\"newBody\"></label>\r\n                <Input type=\"textarea\" rows=\"10\" className=\"newBody w-100 h-100\" id=\"content\" name=\"content\" placeholder=\"Tell us more!\" onChange={(e) => { handleControlledInputChange(e) }} required autoFocus />\r\n              </FormGroup>\r\n            </div>\r\n          </fieldset>\r\n          <fieldset>\r\n            <div className=\"form-group hidden w-100 h-100\">\r\n              <FormGroup>\r\n                <Typeahead\r\n                  id=\"basic-typeahead-multiple\"\r\n                  labelKey=\"name\"\r\n                  multiple\r\n                  onChange={setMultiSelections}\r\n                  options={tags}\r\n                  placeholder=\"Choose tags...\"\r\n                  selected={multiSelections}\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          </fieldset>\r\n          <fieldset className=\"hidden submitContainer\">\r\n            <button className={`submitNewPostBtn hidden btn dangerBtn${style.child}`} type=\"submit\" disabled={loading}> Submit Post </button>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NewPost;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Discover.js",["180"],"import React, { useContext, useEffect } from 'react';\r\nimport PostList from '../components/PostList';\r\nimport { PostContext } from '../providers/PostProvider'\r\nimport WindowChecker from '../utils/WindowChecker';\r\nimport Search from \"./Search\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst Explore = () => {\r\n  const { posts, getAllPosts } = useContext(PostContext);\r\n  const { style } = useContext(StyleContext);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    WindowChecker()\r\n    getAllPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={`postList postList${style.child}`}>\r\n        <Search />\r\n        <PostList posts={posts} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Explore;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\PostList.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\PostCard.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\TagList.js",["181"],"import React from \"react\"\r\nimport TagCard from \"./TagCard\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst TagList = ({ tags }) => {\r\n\r\n  return (\r\n    <div className=\"tagList\">\r\n      {tags.map((tag) => (\r\n        <div key={tag.id}>\r\n          <TagCard tag={tag.tag} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TagList;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\TagCard.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\utils\\WindowChecker.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\PostTagProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Search.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\InspirationProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Inspiration.js",["182"],"import React, { useContext, useEffect } from 'react';\r\nimport PostList from '../components/PostList';\r\nimport { InspirationContext } from \"../providers/InspirationProvider\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\nimport WindowChecker from '../utils/WindowChecker';\r\n\r\nconst Inspiration = () => {\r\n  const { inspiration, getInspirationByUser } = useContext(InspirationContext);\r\n  const { style } = useContext(StyleContext);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    WindowChecker()\r\n    getInspirationByUser();\r\n  }, []);\r\n\r\n  const InspChecker = () => {\r\n    if (inspiration.length > 0) {\r\n      return (<div className={`postList${style.child} postList`}>\r\n        <PostList posts={inspiration} />\r\n      </div>)\r\n    } else {\r\n      return (<div className={`margin-whole${style.child}`}><p className={`margin${style.child}`}>You have no saved inspiration!</p></div>)\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <InspChecker />\r\n\r\n  );\r\n};\r\n\r\nexport default Inspiration;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\InspirationButton.js",["183","184"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { InspirationContext } from \"../providers/InspirationProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst InspirationButton = ({ id }) => {\r\n  const { inspiration, getInspirationByUser, addInspiration, deleteInspiration, loading } = useContext(InspirationContext);\r\n  const { getCurrentUser } = useContext(UserProfileContext);\r\n  const { style } = useContext(StyleContext);\r\n  const user = getCurrentUser();\r\n\r\n  useEffect(() => {\r\n    getInspirationByUser()\r\n  }, [])\r\n\r\n  const addInsp = (event) => {\r\n    const postId = parseInt(event.target.id)\r\n    const userProfileId = parseInt(user.id)\r\n    const insp = {\r\n      postId, userProfileId\r\n    }\r\n    addInspiration(insp)\r\n  }\r\n\r\n  const deleteInsp = (event) => {\r\n    const postId = parseInt(event.target.id)\r\n    deleteInspiration(postId)\r\n  }\r\n\r\n  const inspChecker = () => {\r\n    const inspExist = inspiration.map((i) => { return i.id });\r\n    if (inspExist.includes(id)) {\r\n      return (<button id={id} onClick={(e) => { deleteInsp(e) }} className={`removeInsp${style.child} btn btn-lg`} disabled={loading}><i id={id} className=\"fas fa-heart fa-2x\"></i></button>)\r\n    } else {\r\n      return (<button id={id} onClick={(e) => { addInsp(e) }} className={`addInsp${style.child} btn btn-lg`} disabled={loading}><i id={id} className=\"fas fa-heart fa-2x\"></i></button>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {inspChecker()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InspirationButton;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\RemoveInspBtn.js",["185"],"import React, { useContext } from \"react\";\r\nimport { InspirationContext } from \"../providers/InspirationProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst RemoveInspBtn = ({ id }) => {\r\n  const { deleteInspiration, loading } = useContext(InspirationContext);\r\n  const { getCurrentUser } = useContext(UserProfileContext);\r\n  const { style } = useContext(StyleContext);\r\n  const user = getCurrentUser();\r\n\r\n\r\n  const deleteInsp = (event) => {\r\n    const postId = parseInt(event.target.id)\r\n    deleteInspiration(postId)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button id={id} onClick={(e) => { deleteInsp(e) }} className={`removeInsp${style.child} btn btn-lg`} disabled={loading}><i id={id} className=\"fas fa-heart fa-2x\"></i></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemoveInspBtn;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\SubscriptionBtn.js",["186"],"import React, { useContext, useEffect } from \"react\";\r\nimport { SubContext } from \"../providers/SubProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst SubscriptionButton = ({ post }) => {\r\n  const { rawSubs, getSubList, addSub, deleteSub, loading } = useContext(SubContext);\r\n  const { getCurrentUser } = useContext(UserProfileContext);\r\n  const { style } = useContext(StyleContext);\r\n  const user = getCurrentUser();\r\n\r\n  useEffect(() => {\r\n    getSubList()\r\n  }, [])\r\n\r\n  const addSubscription = (event) => {\r\n    const providerUserProfileId = parseInt(event.target.id)\r\n    const subscriberUserProfileId = parseInt(user.id)\r\n    const sub = {\r\n      providerUserProfileId, subscriberUserProfileId\r\n    }\r\n    addSub(sub)\r\n  }\r\n\r\n  const deleteSubscription = (event) => {\r\n    const providerUserProfileId = parseInt(event.target.id)\r\n    const subscriberUserProfileId = parseInt(user.id)\r\n    deleteSub(providerUserProfileId, subscriberUserProfileId)\r\n  }\r\n\r\n  const subChecker = () => {\r\n    const subExist = rawSubs.map((s) => { return s.providerUserProfileId })\r\n    if (subExist.includes(post.authorId)) {\r\n      return (<button id={post.authorId} className={`cancelBtn${style.child} btn`} onClick={(e) => { deleteSubscription(e) }} disabled={loading}>Unsubscribe</button>)\r\n    } else {\r\n      return (<button id={post.authorId} className={`dangerBtn${style.child} btn`} onClick={(e) => { addSubscription(e) }} disabled={loading}>Subscribe</button>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"subBtn\">\r\n      {subChecker()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscriptionButton;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\SubProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Home.js",["187","188"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { SubContext } from \"../providers/SubProvider\"\r\nimport WindowChecker from \"../utils/WindowChecker\";\r\nimport PostList from \"../components/PostList\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\n\r\nconst Subscriptions = () => {\r\n  const { subs, getSubsByUser } = useContext(SubContext);\r\n  const { style } = useContext(StyleContext);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    WindowChecker()\r\n    getSubsByUser()\r\n  }, []);\r\n\r\n\r\n  const SubChecker = () => {\r\n    if (subs.length > 0) {\r\n      return (<div className={`postList${style.child} postList`}>\r\n        <PostList posts={subs} />\r\n      </div>)\r\n    } else {\r\n      return (<div className={`margin-whole${style.child}`}><p className={`margin${style.child}`}>You have no subscriptions!</p></div>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SubChecker />\r\n  );\r\n};\r\n\r\nexport default Subscriptions;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\RemoveSubBtn.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Profile.js",["189"],"import React, { useContext, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport PostList from '../components/PostList';\r\nimport { PostContext } from '../providers/PostProvider'\r\nimport WindowChecker from '../utils/WindowChecker';\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\nimport { Container, Col, Row } from \"reactstrap\"\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport ProfileSummary from \"../components/ProfileSummary\"\r\n\r\nconst Profile = () => {\r\n  const { posts, getPostsByUserId } = useContext(PostContext);\r\n  const { userSummary, getUserSummary } = useContext(UserProfileContext);\r\n  const { style } = useContext(StyleContext);\r\n  const { id } = useParams();\r\n  const userProfileId = parseInt(JSON.parse(localStorage.getItem('userProfile')).id);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    WindowChecker()\r\n    getPostsByUserId(id)\r\n    getUserSummary(id)\r\n  }, [id]);\r\n\r\n  const PostChecker = () => {\r\n    if (posts.length > 0) {\r\n      return (<Col xs=\"auto\">\r\n        <PostList posts={posts} />\r\n      </Col>)\r\n    } else if (posts.length === 0 && parseInt(id) === userProfileId) {\r\n      return (<div className={`margin-whole${style.child} col-auto`}>\r\n        <p className={`margin${style.child}`}>You have no posts!</p>\r\n      </div>)\r\n    } else if (posts.length === 0 && parseInt(id) !== userProfileId) {\r\n      return (<div className={`margin-whole${style.child} col-auto`}>\r\n        <p className={`margin${style.child}`}>This user has no posts!</p>\r\n      </div>)\r\n    }\r\n  }\r\n\r\n  const profileChecker = () => {\r\n    if (userSummary) {\r\n      return (<ProfileSummary profileSummary={userSummary[0]} />)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container className={`profileContainer${style.child}`}>\r\n        <Row>\r\n          {profileChecker()}\r\n          <PostChecker />\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\StyleProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\MyProfile.js",["190","191"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst MyProfile = () => {\r\n  const { updateStyle, getStyle } = useContext(StyleContext);\r\n  const [style, setStyle] = useState([]);\r\n\r\n  const handleStyleChange = (event) => {\r\n    const styleId = parseInt(event.target.id);\r\n    updateStyle(styleId)\r\n    setStyle(getStyle())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"styleGroup\">\r\n        <button id=\"1\" className=\"dangerBtn btn\" onClick={(e) => { handleStyleChange(e) }}>Sweet</button>\r\n        <button id=\"2\" className=\"pinkBtn-classic btn\" onClick={(e) => { handleStyleChange(e) }}>Classic</button>\r\n        <button id=\"3\" className=\"pinkBtn-goth btn\" onClick={(e) => { handleStyleChange(e) }}>Gothic</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyProfile;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\ProfileSummary.js",["192"],"import React, { useContext } from \"react\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\nimport MyProfile from \"../pages/MyProfile\"\r\nimport { Col } from \"reactstrap\"\r\n\r\nconst ProfileSummary = ({ profileSummary }) => {\r\n  const { style } = useContext(StyleContext);\r\n  const userProfileId = parseInt(JSON.parse(localStorage.getItem('userProfile')).id);\r\n\r\n  const ownerCheck = () => {\r\n    if (parseInt(profileSummary.id) === userProfileId) {\r\n      return (<MyProfile />)\r\n    }\r\n  }\r\n\r\n  return (<>\r\n    <Col xs=\"auto\">\r\n      <div className={`profileSummary${style.child}`}>\r\n        <div className={`profileHeader${style.child}`}>\r\n          <img className=\"userImage\" src={profileSummary.imageLocation} alt={`${profileSummary.displayName} image`}></img>\r\n          <div>{profileSummary.displayName}</div>\r\n        -\r\n        <div>{profileSummary.pronouns}</div>\r\n        </div>\r\n        <p className=\"bioContainer\">\r\n          {profileSummary.bio}\r\n        </p>\r\n        {ownerCheck()}\r\n      </div>\r\n    </Col>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ProfileSummary;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\CommentProvider.js",["193"],"import React, { useState, createContext, useContext } from \"react\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nexport const CommentContext = createContext();\r\n\r\nexport function CommentProvider(props) {\r\n  const apiUrl = \"/api/comment\";\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const { getToken } = useContext(UserProfileContext);\r\n  const user = parseInt(JSON.parse(localStorage.getItem('userProfile')).id);\r\n\r\n\r\n  const getCommentsByPostId = (postId) => {\r\n    getToken().then((token) => {\r\n      fetch(`${apiUrl}/${postId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }).then((res) => res.json())\r\n        .then(setComments)\r\n    })\r\n  }\r\n\r\n  const addComment = (comment) => {\r\n    return getToken().then((token) => {\r\n      fetch(`${apiUrl}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(comment)\r\n      }).then((res) => res.json()).then((res) => console.log(res))\r\n    })\r\n  }\r\n\r\n  const updateComment = (comment) => {\r\n    getToken().then((token) => {\r\n      fetch(`${apiUrl}/${comment.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(comment)\r\n      })\r\n    })\r\n  }\r\n\r\n  const deleteComment = (comment) => {\r\n    getToken().then((token) => {\r\n      fetch(`${apiUrl}/${comment.id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <CommentContext.Provider\r\n      value={{\r\n        addComment,\r\n        updateComment,\r\n        deleteComment,\r\n        comments,\r\n        setComments,\r\n        getCommentsByPostId\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CommentContext.Provider>\r\n  );\r\n}","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\CommentList.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\Comment.js",["194","195","196"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Rules.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":39,"nodeType":"203","messageId":"204","endLine":1,"endColumn":48},{"ruleId":"201","severity":1,"message":"205","line":11,"column":9,"nodeType":"203","messageId":"204","endLine":11,"endColumn":16},{"ruleId":"201","severity":1,"message":"206","line":13,"column":8,"nodeType":"203","messageId":"204","endLine":13,"endColumn":14},{"ruleId":"201","severity":1,"message":"207","line":24,"column":11,"nodeType":"203","messageId":"204","endLine":24,"endColumn":21},{"ruleId":"201","severity":1,"message":"208","line":26,"column":10,"nodeType":"203","messageId":"204","endLine":26,"endColumn":15},{"ruleId":"209","severity":1,"message":"210","line":31,"column":6,"nodeType":"211","endLine":31,"endColumn":8,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":86,"column":13,"nodeType":"215","endLine":86,"endColumn":202},{"ruleId":"201","severity":1,"message":"216","line":9,"column":19,"nodeType":"203","messageId":"204","endLine":9,"endColumn":29},{"ruleId":"209","severity":1,"message":"217","line":62,"column":6,"nodeType":"211","endLine":62,"endColumn":8,"suggestions":"218"},{"ruleId":"201","severity":1,"message":"219","line":10,"column":18,"nodeType":"203","messageId":"204","endLine":10,"endColumn":32},{"ruleId":"209","severity":1,"message":"220","line":25,"column":6,"nodeType":"211","endLine":25,"endColumn":8,"suggestions":"221"},{"ruleId":"201","severity":1,"message":"222","line":44,"column":11,"nodeType":"203","messageId":"204","endLine":44,"endColumn":19},{"ruleId":"213","severity":1,"message":"214","line":115,"column":17,"nodeType":"215","endLine":115,"endColumn":197},{"ruleId":"209","severity":1,"message":"223","line":16,"column":6,"nodeType":"211","endLine":16,"endColumn":8,"suggestions":"224"},{"ruleId":"201","severity":1,"message":"225","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":22},{"ruleId":"209","severity":1,"message":"226","line":15,"column":6,"nodeType":"211","endLine":15,"endColumn":8,"suggestions":"227"},{"ruleId":"201","severity":1,"message":"228","line":1,"column":40,"nodeType":"203","messageId":"204","endLine":1,"endColumn":48},{"ruleId":"209","severity":1,"message":"226","line":14,"column":6,"nodeType":"211","endLine":14,"endColumn":8,"suggestions":"229"},{"ruleId":"201","severity":1,"message":"230","line":10,"column":9,"nodeType":"203","messageId":"204","endLine":10,"endColumn":13},{"ruleId":"209","severity":1,"message":"231","line":14,"column":6,"nodeType":"211","endLine":14,"endColumn":8,"suggestions":"232"},{"ruleId":"201","severity":1,"message":"228","line":1,"column":40,"nodeType":"203","messageId":"204","endLine":1,"endColumn":48},{"ruleId":"209","severity":1,"message":"233","line":16,"column":6,"nodeType":"211","endLine":16,"endColumn":8,"suggestions":"234"},{"ruleId":"209","severity":1,"message":"235","line":23,"column":6,"nodeType":"211","endLine":23,"endColumn":10,"suggestions":"236"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":29,"nodeType":"203","messageId":"204","endLine":1,"endColumn":38},{"ruleId":"201","severity":1,"message":"208","line":6,"column":10,"nodeType":"203","messageId":"204","endLine":6,"endColumn":15},{"ruleId":"237","severity":1,"message":"238","line":20,"column":11,"nodeType":"215","endLine":20,"endColumn":117},{"ruleId":"201","severity":1,"message":"230","line":11,"column":9,"nodeType":"203","messageId":"204","endLine":11,"endColumn":13},{"ruleId":"201","severity":1,"message":"239","line":9,"column":26,"nodeType":"203","messageId":"204","endLine":9,"endColumn":39},{"ruleId":"201","severity":1,"message":"240","line":9,"column":41,"nodeType":"203","messageId":"204","endLine":9,"endColumn":60},{"ruleId":"201","severity":1,"message":"241","line":13,"column":10,"nodeType":"203","messageId":"204","endLine":13,"endColumn":21},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'Search' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'style' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStyle'. Either include it or remove the dependency array.","ArrayExpression",["244"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setNewPost' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQuiz'. Either include it or remove the dependency array.",["245"],"'getCurrentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTags'. Either include it or remove the dependency array.",["246"],"'newImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllPosts'. Either include it or remove the dependency array.",["247"],"'StyleContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getInspirationByUser'. Either include it or remove the dependency array.",["248"],"'useState' is defined but never used.",["249"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSubList'. Either include it or remove the dependency array.",["250"],"React Hook useEffect has a missing dependency: 'getSubsByUser'. Either include it or remove the dependency array.",["251"],"React Hook useEffect has missing dependencies: 'getPostsByUserId' and 'getUserSummary'. Either include them or remove the dependency array.",["252"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'deleteComment' is assigned a value but never used.","'getCommentsByPostId' is assigned a value but never used.","'commentList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"261","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [getStyle]",{"range":"270","text":"271"},"Update the dependencies array to be: [getQuiz]",{"range":"272","text":"273"},"Update the dependencies array to be: [getTags]",{"range":"274","text":"275"},"Update the dependencies array to be: [getAllPosts]",{"range":"276","text":"277"},"Update the dependencies array to be: [getInspirationByUser]",{"range":"278","text":"279"},{"range":"280","text":"279"},"Update the dependencies array to be: [getSubList]",{"range":"281","text":"282"},"Update the dependencies array to be: [getSubsByUser]",{"range":"283","text":"284"},"Update the dependencies array to be: [getPostsByUserId, getUserSummary, id]",{"range":"285","text":"286"},[1362,1364],"[getStyle]",[1865,1867],"[getQuiz]",[1061,1063],"[getTags]",[532,534],"[getAllPosts]",[550,552],"[getInspirationByUser]",[634,636],[563,565],"[getSubList]",[517,519],"[getSubsByUser]",[955,959],"[getPostsByUserId, getUserSummary, id]"]