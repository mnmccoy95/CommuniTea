[{"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\index.js":"1","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\App.js":"2","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\reportWebVitals.js":"3","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\AppHeader.js":"4","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\ApplicationViews.js":"6","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\QuizProvider.js":"7","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Register.js":"8","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Quiz.js":"9","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Login.js":"10","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\PostProvider.js":"11","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\TagProvider.js":"12","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\NewPost.js":"13","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Discover.js":"14","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\PostList.js":"15","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\PostCard.js":"16","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\TagList.js":"17","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\TagCard.js":"18","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\utils\\WindowChecker.js":"19","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\PostTagProvider.js":"20","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Search.js":"21","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\InspirationProvider.js":"22","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Inspiration.js":"23","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\InspirationButton.js":"24","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\RemoveInspBtn.js":"25","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\SubscriptionBtn.js":"26","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\SubProvider.js":"27","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Home.js":"28","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\RemoveSubBtn.js":"29","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Profile.js":"30","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\StyleProvider.js":"31","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\MyProfile.js":"32","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\ProfileSummary.js":"33"},{"size":704,"mtime":1612562854307,"results":"34","hashOfConfig":"35"},{"size":779,"mtime":1612802655606,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":3343,"mtime":1612823286368,"results":"38","hashOfConfig":"35"},{"size":3506,"mtime":1612821032119,"results":"39","hashOfConfig":"35"},{"size":3758,"mtime":1612803098311,"results":"40","hashOfConfig":"35"},{"size":821,"mtime":1611952871632,"results":"41","hashOfConfig":"35"},{"size":5453,"mtime":1612806168530,"results":"42","hashOfConfig":"35"},{"size":4537,"mtime":1612823438300,"results":"43","hashOfConfig":"35"},{"size":2449,"mtime":1612806745431,"results":"44","hashOfConfig":"35"},{"size":2780,"mtime":1612821040665,"results":"45","hashOfConfig":"35"},{"size":853,"mtime":1612296254399,"results":"46","hashOfConfig":"35"},{"size":5622,"mtime":1612807674746,"results":"47","hashOfConfig":"35"},{"size":733,"mtime":1612638225818,"results":"48","hashOfConfig":"35"},{"size":311,"mtime":1612638918055,"results":"49","hashOfConfig":"35"},{"size":4809,"mtime":1612639669757,"results":"50","hashOfConfig":"35"},{"size":365,"mtime":1612637279736,"results":"51","hashOfConfig":"35"},{"size":297,"mtime":1612639092361,"results":"52","hashOfConfig":"35"},{"size":185,"mtime":1612209274162,"results":"53","hashOfConfig":"35"},{"size":2016,"mtime":1612296344805,"results":"54","hashOfConfig":"35"},{"size":994,"mtime":1612638302198,"results":"55","hashOfConfig":"35"},{"size":1971,"mtime":1612807413525,"results":"56","hashOfConfig":"35"},{"size":993,"mtime":1612641224544,"results":"57","hashOfConfig":"35"},{"size":1611,"mtime":1612807101943,"results":"58","hashOfConfig":"35"},{"size":884,"mtime":1612807471451,"results":"59","hashOfConfig":"35"},{"size":1692,"mtime":1612807143927,"results":"60","hashOfConfig":"35"},{"size":2586,"mtime":1612807400671,"results":"61","hashOfConfig":"35"},{"size":940,"mtime":1612640839863,"results":"62","hashOfConfig":"35"},{"size":1021,"mtime":1612807425590,"results":"63","hashOfConfig":"35"},{"size":1957,"mtime":1612823540899,"results":"64","hashOfConfig":"35"},{"size":2146,"mtime":1612656435267,"results":"65","hashOfConfig":"35"},{"size":859,"mtime":1612819910756,"results":"66","hashOfConfig":"35"},{"size":1077,"mtime":1612822353063,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1pem0fl",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"70"},"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\index.js",[],["149","150"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\App.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\reportWebVitals.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\AppHeader.js",["151"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst AppHeader = () => {\r\n  const { getCurrentUser, logout } = useContext(UserProfileContext);\r\n  const { style, getStyle } = useContext(StyleContext);\r\n  const user = getCurrentUser();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutAndReturn = () => {\r\n    return logout().then(() => {\r\n      history.push('/login');\r\n      getStyle()\r\n    });\r\n  };\r\n\r\n  const userChecker = () => {\r\n    if (user && user.approved === 2) {\r\n      return (\r\n        <>\r\n          <NavItem>\r\n            <NavLink to=\"/quiz\" tag={Link}>\r\n              Quiz\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink className=\"pointer\" onClick={logoutAndReturn}>\r\n              Logout\r\n          </NavLink>\r\n          </NavItem>\r\n        </>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n          <NavItem>\r\n            <NavLink to=\"/login\" tag={Link}>\r\n              Login\r\n                  </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/register\" tag={Link}>\r\n              Register\r\n                  </NavLink>\r\n          </NavItem>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"vert-align\">\r\n      <Navbar className={`navbar${style.child}`} dark expand=\"md\">\r\n        <NavbarBrand className={`navbar-brand${style.child}`} tag={Link} to=\"/\">\r\n          CommuniTea\r\n        </NavbarBrand>\r\n        <NavbarToggler className={` navbar-toggler${style.child}`} onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {user && user.approved === 1 ? (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink className={`nav-link${style.child}`} to=\"/newpost\" tag={Link}>\r\n                    New Post\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className={`nav-link${style.child}`} to=\"/discover\" tag={Link}>\r\n                    Discover\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className={`nav-link${style.child}`} to=\"/inspiration\" tag={Link}>\r\n                    Inspiration\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className={`nav-link${style.child}`} to={`/profile/${user.id}`} tag={Link}>\r\n                    {user.displayName}\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className={`nav-link${style.child} pointer`} onClick={logoutAndReturn}>\r\n                    Logout\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n                userChecker()\r\n              )}\r\n\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\UserProfileProvider.js",["152"],"import React, { useState, useEffect, createContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Spinner } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const UserProfileContext = createContext();\r\n\r\nexport function UserProfileProvider(props) {\r\n  const apiUrl = \"/api/userprofile\";\r\n  const history = useHistory();\r\n\r\n  const userProfile = localStorage.getItem(\"userProfile\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\r\n  const [userSummary, setUserSummary] = useState();\r\n\r\n  const [isFirebaseReady, setIsFirebaseReady] = useState(false);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((u) => {\r\n      setIsFirebaseReady(true);\r\n    });\r\n  }, []);\r\n\r\n  const login = (email, pw) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, pw)\r\n      .then((signInResponse) => getUserProfile(signInResponse.user.uid))\r\n      .then((userProfile) => {\r\n        if (userProfile.approved === 1) {\r\n          localStorage.setItem(\"userProfile\", JSON.stringify(userProfile));\r\n          setIsLoggedIn(true);\r\n          return userProfile\r\n        } else if (userProfile.approved === 2) {\r\n          localStorage.setItem(\"userProfile\", JSON.stringify(userProfile))\r\n          setIsLoggedIn(true);\r\n          return userProfile\r\n        } else if (userProfile.approved === 0) {\r\n          setIsLoggedIn(false);\r\n          return userProfile\r\n        }\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    return firebase.auth().signOut()\r\n      .then(() => {\r\n        localStorage.clear()\r\n        setIsLoggedIn(false);\r\n      });\r\n  };\r\n\r\n  const register = (userProfile, password) => {\r\n    return firebase.auth().createUserWithEmailAndPassword(userProfile.email, password)\r\n      .then((createResponse) => saveUser({ ...userProfile, firebaseUserId: createResponse.user.uid }))\r\n      .then((savedUserProfile) => {\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile));\r\n        setIsLoggedIn(true);\r\n      });\r\n  };\r\n\r\n  const getToken = () => firebase.auth().currentUser.getIdToken();\r\n\r\n  const getUserProfile = (firebaseUserId) => {\r\n    return getToken().then((token) =>\r\n      fetch(`${apiUrl}/${firebaseUserId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }).then(resp => resp.json()));\r\n  };\r\n\r\n  const saveUser = (userProfile) => {\r\n    return getToken().then((token) =>\r\n      fetch(apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(userProfile)\r\n      }).then(resp => resp.json()));\r\n  };\r\n\r\n  const getCurrentUser = () => {\r\n    const user = localStorage.getItem(\"userProfile\");\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    return JSON.parse(user);\r\n  };\r\n\r\n  const getUserSummary = (id) => {\r\n    return getToken().then((token) => {\r\n      fetch(`${apiUrl}/getsummary/${id}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }).then(resp => resp.json()).then(setUserSummary)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <UserProfileContext.Provider value={{ isLoggedIn, login, logout, register, getToken, getCurrentUser, getUserSummary, userSummary }}>\r\n      {isFirebaseReady\r\n        ? props.children\r\n        : <Spinner className=\"app-spinner dark\" />}\r\n    </UserProfileContext.Provider>\r\n  );\r\n}","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\ApplicationViews.js",["153","154","155","156"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { UserProfileContext } from '../providers/UserProfileProvider';\r\nimport { QuizProvider } from '../providers/QuizProvider'\r\nimport Login from '../pages/Login';\r\nimport Register from '../pages/Register';\r\nimport Quiz from '../pages/Quiz'\r\nimport { PostProvider } from '../providers/PostProvider'\r\nimport { TagProvider } from '../providers/TagProvider'\r\nimport Discover from '../pages/Discover'\r\nimport NewPost from '../pages/NewPost'\r\nimport { PostTagProvider } from '../providers/PostTagProvider';\r\nimport Search from \"../pages/Search\"\r\nimport { InspirationProvider } from '../providers/InspirationProvider'\r\nimport Inspiration from '../pages/Inspiration';\r\nimport Home from '../pages/Home'\r\nimport { SubProvider } from '../providers/SubProvider'\r\nimport Profile from '../pages/Profile';\r\nimport { StyleContext } from '../providers/StyleProvider'\r\n\r\nconst ApplicationViews = () => {\r\n  const { isLoggedIn, getCurrentUser } = useContext(UserProfileContext);\r\n  const { getStyle } = useContext(StyleContext);\r\n  const [style, setStyle] = useState([]);\r\n  const user = getCurrentUser();\r\n\r\n  useEffect(() => {\r\n    setStyle(getStyle())\r\n  }, [])\r\n\r\n  const approvalChecker = () => {\r\n    if (user && user.approved === 2) {\r\n      return (\r\n        <QuizProvider>\r\n          <Route path=\"/quiz\">\r\n            <Quiz />\r\n          </Route>\r\n          <Route path=\"/\" exact>\r\n            <Quiz />\r\n          </Route>\r\n        </QuizProvider>)\r\n\r\n    } else if (user && user.approved === 1) {\r\n      return (<>\r\n\r\n        <PostTagProvider>\r\n          <PostProvider>\r\n            <TagProvider>\r\n              <InspirationProvider>\r\n                <SubProvider>\r\n                  <Route path=\"/newpost\">\r\n                    <NewPost />\r\n                  </Route>\r\n\r\n                  <Route path=\"/\" exact>\r\n                    <Home />\r\n                  </Route>\r\n                </SubProvider>\r\n              </InspirationProvider>\r\n            </TagProvider>\r\n          </PostProvider>\r\n        </PostTagProvider>\r\n\r\n        <PostTagProvider>\r\n          <PostProvider>\r\n            <TagProvider>\r\n              <InspirationProvider>\r\n                <SubProvider>\r\n                  <Route path=\"/profile/:id\">\r\n                    <Profile />\r\n                  </Route>\r\n                </SubProvider>\r\n              </InspirationProvider>\r\n            </TagProvider>\r\n          </PostProvider>\r\n        </PostTagProvider>\r\n        <PostTagProvider>\r\n          <PostProvider>\r\n            <TagProvider>\r\n              <InspirationProvider>\r\n                <SubProvider>\r\n                  <Route path=\"/discover\">\r\n                    <Discover />\r\n                  </Route>\r\n                </SubProvider>\r\n              </InspirationProvider>\r\n            </TagProvider>\r\n          </PostProvider>\r\n        </PostTagProvider>\r\n        <PostTagProvider>\r\n          <PostProvider>\r\n            <TagProvider>\r\n              <InspirationProvider>\r\n                <SubProvider>\r\n                  <Route path=\"/inspiration\">\r\n                    <Inspiration />\r\n                  </Route>\r\n                </SubProvider>\r\n              </InspirationProvider>\r\n            </TagProvider>\r\n          </PostProvider>\r\n        </PostTagProvider>\r\n\r\n      </>\r\n      )\r\n    } else {\r\n      return (\r\n        <Route path=\"/\" exact>\r\n          <Login />\r\n        </Route>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n      {approvalChecker()}\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ApplicationViews;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\QuizProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Register.js",["157"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Register = () => {\r\n  const { register } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pronouns, setPronouns] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const [imageLoading, setImageLoading] = useState(false)\r\n\r\n\r\n  const uploadImage = async e => {\r\n    const files = e.target.files\r\n    setImageLoading(true)\r\n    const data = new FormData()\r\n    data.append('file', files[0])\r\n    data.append('upload_preset', 'vugr9ics')\r\n    const res = await fetch(\r\n      'https://api.cloudinary.com/v1_1/dddadzenw/image/upload/',\r\n      {\r\n        method: \"POST\",\r\n        body: data\r\n      }\r\n    )\r\n    const file = await res.json()\r\n    let image = file.secure_url\r\n    localStorage.setItem(\"image\", image)\r\n\r\n    setImageLoading(false)\r\n    const matches = document.querySelectorAll(\".hidden\");\r\n    for (const m of matches) {\r\n      m.style.display = \"block\"\r\n    }\r\n    document.querySelector(\".notHidden\").style.display = \"none\"\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirm) {\r\n      toast.error(\"Passwords don't match!\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const imageLocation = localStorage.getItem(\"image\")\r\n    const profile = {\r\n      displayName,\r\n      email,\r\n      imageLocation,\r\n      pronouns,\r\n      bio\r\n    };\r\n    register(profile, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        history.push(\"/quiz\");\r\n        localStorage.removeItem(\"image\")\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(\"Something went wrong!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form new-post-form-container\">\r\n      <form onSubmit={handleSubmit} className=\"new-post-form-area\">\r\n        <h2 className=\"text-center\">Register</h2>\r\n        <div className=\"form-group uploadForm\">\r\n          <div className='defaultImageContainer'>\r\n            <img className='defaultImage-register' src={localStorage.image ? localStorage.image : 'https://build.dfomer.com/wp-content/uploads/2016/04/dummy-post-horisontal-thegem-blog-default.jpg'} />\r\n          </div>\r\n\r\n          {imageLoading ? (\r\n            <h6 className=\"loadingImage\">Loading...</h6>\r\n          ) : <></>}\r\n\r\n\r\n          <br />\r\n          <label htmlFor=\"embedpollfileinput\" className=\"btn dangerBtn notHidden uploadButton\">\r\n            Upload image\r\n          </label>\r\n          <input hidden type=\"file\" onChange={uploadImage} className=\"inputfile\" id=\"embedpollfileinput\" />\r\n        </div>\r\n        <div className=\"form-group hidden\">\r\n          <Input\r\n            onChange={(e) => setDisplayName(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"displayName\"\r\n            placeholder=\"Display Name\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group hidden\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group hidden\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group hidden\">\r\n          <Input\r\n            onChange={(e) => setConfirm(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group hidden\">\r\n          <Input\r\n            onChange={(e) => setPronouns(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"pronouns\"\r\n            placeholder=\"Pronouns\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group hidden\">\r\n          <Input\r\n            onChange={(e) => setBio(e.target.value)}\r\n            type=\"textarea\"\r\n            className=\"form-control\"\r\n            name=\"bio\"\r\n            rows=\"5\"\r\n            placeholder=\"Bio\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group hidden submitContainer\">\r\n          <Button type=\"submit\" className=\"dangerBtn btn\" disabled={loading}>\r\n            Sign Up\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Already have an account?\r\n          <div>\r\n            <Link to=\"/login\">Log in here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Quiz.js",["158","159"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Login.js",["160"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst Login = () => {\r\n  const { login, getCurrentUser } = useContext(UserProfileContext);\r\n  const { getStyle } = useContext(StyleContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    login(email, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        if (user.approved === 2) {\r\n          history.push(\"/quiz\")\r\n        } else if (user.approved === 0) {\r\n          toast.error(\"User not approved :(\");\r\n        } else {\r\n          getStyle()\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(\"Invalid email or password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form new-post-form-container\" >\r\n      <form onSubmit={handleSubmit} className=\"new-post-form-area\">\r\n        <h2 className=\"text-center\">Login</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group submitContainer\">\r\n          <Button type=\"submit\" className=\"dangerBtn btn\" disabled={loading}>\r\n            Sign in\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Don't have an account?\r\n          <div>\r\n            <Link to=\"/register\">Sign up here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\PostProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\TagProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\NewPost.js",["161","162","163"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { TagContext } from \"../providers/TagProvider\"\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport WindowChecker from \"../utils/WindowChecker\";\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport { FormGroup, Input } from \"reactstrap\"\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { PostTagContext } from \"../providers/PostTagProvider\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst NewPost = () => {\r\n  const { tags, getTags } = useContext(TagContext);\r\n  const { getToken } = useContext(UserProfileContext);\r\n  const { addPostTag } = useContext(PostTagContext);\r\n  const { style } = useContext(StyleContext);\r\n  const [multiSelections, setMultiSelections] = useState([]);\r\n  const [post, setPost] = useState([]);\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    WindowChecker()\r\n    getTags();\r\n  }, []);\r\n\r\n  const [imageLoading, setImageLoading] = useState(false)\r\n\r\n  const uploadImage = async e => {\r\n    const files = e.target.files\r\n    setImageLoading(true)\r\n    const data = new FormData()\r\n    data.append('file', files[0])\r\n    data.append('upload_preset', 'z0vejl5n')\r\n    const res = await fetch(\r\n      'https://api.cloudinary.com/v1_1/dddadzenw/image/upload',\r\n      {\r\n        method: \"POST\",\r\n        body: data\r\n      }\r\n    )\r\n    const file = await res.json()\r\n    let image = file.secure_url\r\n    const newImage = localStorage.setItem(\"image\", image);\r\n\r\n    setImageLoading(false)\r\n    const matches = document.querySelectorAll(\".hidden\");\r\n    for (const m of matches) {\r\n      m.style.display = \"inline-block\"\r\n    }\r\n    document.querySelector(\".notHidden\").style.display = \"none\"\r\n  }\r\n\r\n  const submitPost = (post) => {\r\n    setLoading(true)\r\n    getToken().then((token) => {\r\n      fetch(`/api/post`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(post)\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          for (const tag of multiSelections) {\r\n            const postId = res.id;\r\n            const tagId = tag.id;\r\n            const postTag = {\r\n              postId,\r\n              tagId\r\n            };\r\n            addPostTag(postTag)\r\n          }\r\n        })\r\n        .then((data) => {\r\n          history.push(`/discover`)\r\n          setLoading(false)\r\n        })\r\n        .then(localStorage.removeItem(\"image\"))\r\n    })\r\n  }\r\n\r\n  const handleControlledInputChange = (event) => {\r\n    const newPost = { ...post }\r\n    newPost[event.target.name] = event.target.value\r\n    setPost(newPost)\r\n  }\r\n\r\n  const handleClickSubmitPost = (event) => {\r\n    event.preventDefault()\r\n    post.imageLocation = localStorage.getItem(\"image\");\r\n\r\n    const user = JSON.parse(localStorage.getItem('userProfile'));\r\n    if (user == null) {\r\n      history.push(\"/login\")\r\n    }\r\n    else {\r\n      submitPost(post)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <section className={`new-post-form-container new-post-form-container${style.child}`}>\r\n      <div className={`new-post-form-area${style.child} new-post-form-area`}>\r\n        <h2 className=\"new-post-form-title\">Create A New Post</h2>\r\n        <form id=\"newPostForm\" onSubmit={(e) => { handleClickSubmitPost(e) }}>\r\n          <fieldset>\r\n            <div className=\"form-group uploadForm\">\r\n              <div className='defaultImageContainer'>\r\n                <img className='defaultImage' src={localStorage.image ? localStorage.image : 'https://build.dfomer.com/wp-content/uploads/2016/04/dummy-post-horisontal-thegem-blog-default.jpg'} />\r\n              </div>\r\n              {imageLoading ? (\r\n                <h6 className=\"loadingImage\">Loading...</h6>\r\n              ) : <></>}\r\n              <br />\r\n              <label htmlFor=\"embedpollfileinput\" className={`btn btn-info notHidden uploadButton dangerBtn${style.child}`}>\r\n                Upload image\r\n              </label>\r\n              <input hidden type=\"file\" onChange={uploadImage} className=\"inputfile\" id=\"embedpollfileinput\" />\r\n            </div>\r\n          </fieldset>\r\n          <fieldset>\r\n            <div className=\"form-group hidden w-100 h-100\">\r\n              <FormGroup>\r\n                <label className=\"new-post-label\" htmlFor=\"newBody\"></label>\r\n                <Input type=\"textarea\" rows=\"10\" className=\"newBody w-100 h-100\" id=\"content\" name=\"content\" placeholder=\"Tell us more!\" onChange={(e) => { handleControlledInputChange(e) }} required autoFocus />\r\n              </FormGroup>\r\n            </div>\r\n          </fieldset>\r\n          <fieldset>\r\n            <div className=\"form-group hidden w-100 h-100\">\r\n              <FormGroup>\r\n                <Typeahead\r\n                  id=\"basic-typeahead-multiple\"\r\n                  labelKey=\"name\"\r\n                  multiple\r\n                  onChange={setMultiSelections}\r\n                  options={tags}\r\n                  placeholder=\"Choose tags...\"\r\n                  selected={multiSelections}\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n          </fieldset>\r\n          <fieldset className=\"hidden submitContainer\">\r\n            <button className={`submitNewPostBtn hidden btn dangerBtn${style.child}`} type=\"submit\" disabled={loading}> Submit Post </button>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NewPost;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Discover.js",["164"],"import React, { useContext, useEffect } from 'react';\r\nimport PostList from '../components/PostList';\r\nimport { PostContext } from '../providers/PostProvider'\r\nimport WindowChecker from '../utils/WindowChecker';\r\nimport Search from \"./Search\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst Explore = () => {\r\n  const { posts, getAllPosts } = useContext(PostContext);\r\n  const { style } = useContext(StyleContext);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    WindowChecker()\r\n    getAllPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={`postList postList${style.child}`}>\r\n        <Search />\r\n        <PostList posts={posts} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Explore;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\PostList.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\PostCard.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\TagList.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\TagCard.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\utils\\WindowChecker.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\PostTagProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Search.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\InspirationProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Inspiration.js",["165"],"import React, { useContext, useEffect } from 'react';\r\nimport PostList from '../components/PostList';\r\nimport { InspirationContext } from \"../providers/InspirationProvider\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\nimport WindowChecker from '../utils/WindowChecker';\r\n\r\nconst Inspiration = () => {\r\n  const { inspiration, getInspirationByUser } = useContext(InspirationContext);\r\n  const { style } = useContext(StyleContext);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    WindowChecker()\r\n    getInspirationByUser();\r\n  }, []);\r\n\r\n  const InspChecker = () => {\r\n    if (inspiration.length > 0) {\r\n      return (<div className={`postList${style.child} postList`}>\r\n        <PostList posts={inspiration} />\r\n      </div>)\r\n    } else {\r\n      return (<div className={`margin-whole${style.child}`}><p className={`margin${style.child}`}>You have no saved inspiration!</p></div>)\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <InspChecker />\r\n\r\n  );\r\n};\r\n\r\nexport default Inspiration;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\InspirationButton.js",["166","167"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { InspirationContext } from \"../providers/InspirationProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst InspirationButton = ({ id }) => {\r\n  const { inspiration, getInspirationByUser, addInspiration, deleteInspiration, loading } = useContext(InspirationContext);\r\n  const { getCurrentUser } = useContext(UserProfileContext);\r\n  const { style } = useContext(StyleContext);\r\n  const user = getCurrentUser();\r\n\r\n  useEffect(() => {\r\n    getInspirationByUser()\r\n  }, [])\r\n\r\n  const addInsp = (event) => {\r\n    const postId = parseInt(event.target.id)\r\n    const userProfileId = parseInt(user.id)\r\n    const insp = {\r\n      postId, userProfileId\r\n    }\r\n    addInspiration(insp)\r\n  }\r\n\r\n  const deleteInsp = (event) => {\r\n    const postId = parseInt(event.target.id)\r\n    deleteInspiration(postId)\r\n  }\r\n\r\n  const inspChecker = () => {\r\n    const inspExist = inspiration.map((i) => { return i.id });\r\n    if (inspExist.includes(id)) {\r\n      return (<button id={id} onClick={(e) => { deleteInsp(e) }} className={`removeInsp${style.child} btn btn-lg`} disabled={loading}><i id={id} className=\"fas fa-heart fa-2x\"></i></button>)\r\n    } else {\r\n      return (<button id={id} onClick={(e) => { addInsp(e) }} className={`addInsp${style.child} btn btn-lg`} disabled={loading}><i id={id} className=\"fas fa-heart fa-2x\"></i></button>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {inspChecker()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InspirationButton;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\RemoveInspBtn.js",["168"],"import React, { useContext } from \"react\";\r\nimport { InspirationContext } from \"../providers/InspirationProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst RemoveInspBtn = ({ id }) => {\r\n  const { deleteInspiration, loading } = useContext(InspirationContext);\r\n  const { getCurrentUser } = useContext(UserProfileContext);\r\n  const { style } = useContext(StyleContext);\r\n  const user = getCurrentUser();\r\n\r\n\r\n  const deleteInsp = (event) => {\r\n    const postId = parseInt(event.target.id)\r\n    deleteInspiration(postId)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button id={id} onClick={(e) => { deleteInsp(e) }} className={`removeInsp${style.child} btn btn-lg`} disabled={loading}><i id={id} className=\"fas fa-heart fa-2x\"></i></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemoveInspBtn;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\SubscriptionBtn.js",["169"],"import React, { useContext, useEffect } from \"react\";\r\nimport { SubContext } from \"../providers/SubProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst SubscriptionButton = ({ post }) => {\r\n  const { rawSubs, getSubList, addSub, deleteSub, loading } = useContext(SubContext);\r\n  const { getCurrentUser } = useContext(UserProfileContext);\r\n  const { style } = useContext(StyleContext);\r\n  const user = getCurrentUser();\r\n\r\n  useEffect(() => {\r\n    getSubList()\r\n  }, [])\r\n\r\n  const addSubscription = (event) => {\r\n    const providerUserProfileId = parseInt(event.target.id)\r\n    const subscriberUserProfileId = parseInt(user.id)\r\n    const sub = {\r\n      providerUserProfileId, subscriberUserProfileId\r\n    }\r\n    addSub(sub)\r\n  }\r\n\r\n  const deleteSubscription = (event) => {\r\n    const providerUserProfileId = parseInt(event.target.id)\r\n    const subscriberUserProfileId = parseInt(user.id)\r\n    deleteSub(providerUserProfileId, subscriberUserProfileId)\r\n  }\r\n\r\n  const subChecker = () => {\r\n    const subExist = rawSubs.map((s) => { return s.providerUserProfileId })\r\n    if (subExist.includes(post.authorId)) {\r\n      return (<button id={post.authorId} className={`cancelBtn${style.child} btn`} onClick={(e) => { deleteSubscription(e) }} disabled={loading}>Unsubscribe</button>)\r\n    } else {\r\n      return (<button id={post.authorId} className={`dangerBtn${style.child} btn`} onClick={(e) => { addSubscription(e) }} disabled={loading}>Subscribe</button>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"subBtn\">\r\n      {subChecker()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscriptionButton;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\SubProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Home.js",["170","171"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { SubContext } from \"../providers/SubProvider\"\r\nimport WindowChecker from \"../utils/WindowChecker\";\r\nimport PostList from \"../components/PostList\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\n\r\nconst Subscriptions = () => {\r\n  const { subs, getSubsByUser } = useContext(SubContext);\r\n  const { style } = useContext(StyleContext);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    WindowChecker()\r\n    getSubsByUser()\r\n  }, []);\r\n\r\n\r\n  const SubChecker = () => {\r\n    if (subs.length > 0) {\r\n      return (<div className={`postList${style.child} postList`}>\r\n        <PostList posts={subs} />\r\n      </div>)\r\n    } else {\r\n      return (<div className={`margin-whole${style.child}`}><p className={`margin${style.child}`}>You have no subscriptions!</p></div>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SubChecker />\r\n  );\r\n};\r\n\r\nexport default Subscriptions;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\RemoveSubBtn.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Profile.js",["172"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\StyleProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\MyProfile.js",["173","174"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\n\r\nconst MyProfile = () => {\r\n  const { updateStyle, getStyle } = useContext(StyleContext);\r\n  const [style, setStyle] = useState([]);\r\n\r\n  const handleStyleChange = (event) => {\r\n    const styleId = parseInt(event.target.id);\r\n    updateStyle(styleId)\r\n    setStyle(getStyle())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"styleGroup\">\r\n        <button id=\"1\" className=\"dangerBtn btn\" onClick={(e) => { handleStyleChange(e) }}>Sweet</button>\r\n        <button id=\"2\" className=\"pinkBtn-classic btn\" onClick={(e) => { handleStyleChange(e) }}>Classic</button>\r\n        <button id=\"3\" className=\"pinkBtn-goth btn\" onClick={(e) => { handleStyleChange(e) }}>Gothic</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyProfile;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\ProfileSummary.js",["175"],"import React, { useContext } from \"react\"\r\nimport { StyleContext } from \"../providers/StyleProvider\"\r\nimport MyProfile from \"../pages/MyProfile\"\r\nimport { Col } from \"reactstrap\"\r\n\r\nconst ProfileSummary = ({ profileSummary }) => {\r\n  const { style } = useContext(StyleContext);\r\n  const userProfileId = parseInt(JSON.parse(localStorage.getItem('userProfile')).id);\r\n\r\n  const ownerCheck = () => {\r\n    if (parseInt(profileSummary.id) === userProfileId) {\r\n      return (<MyProfile />)\r\n    }\r\n  }\r\n\r\n  return (<>\r\n    <Col xs=\"auto\">\r\n      <div className={`profileSummary${style.child}`}>\r\n        <div className={`profileHeader${style.child}`}>\r\n          <img className=\"userImage\" src={profileSummary.imageLocation} alt={`${profileSummary.displayName} image`}></img>\r\n          <div>{profileSummary.displayName}</div>\r\n        -\r\n        <div>{profileSummary.pronouns}</div>\r\n        </div>\r\n        <p className=\"bioContainer\">\r\n          {profileSummary.bio}\r\n        </p>\r\n        {ownerCheck()}\r\n      </div>\r\n    </Col>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default ProfileSummary;",{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":39,"nodeType":"182","messageId":"183","endLine":1,"endColumn":48},{"ruleId":"180","severity":1,"message":"184","line":11,"column":9,"nodeType":"182","messageId":"183","endLine":11,"endColumn":16},{"ruleId":"180","severity":1,"message":"185","line":13,"column":8,"nodeType":"182","messageId":"183","endLine":13,"endColumn":14},{"ruleId":"180","severity":1,"message":"186","line":22,"column":11,"nodeType":"182","messageId":"183","endLine":22,"endColumn":21},{"ruleId":"180","severity":1,"message":"187","line":24,"column":10,"nodeType":"182","messageId":"183","endLine":24,"endColumn":15},{"ruleId":"188","severity":1,"message":"189","line":29,"column":6,"nodeType":"190","endLine":29,"endColumn":8,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":83,"column":13,"nodeType":"194","endLine":83,"endColumn":202},{"ruleId":"180","severity":1,"message":"195","line":9,"column":19,"nodeType":"182","messageId":"183","endLine":9,"endColumn":29},{"ruleId":"188","severity":1,"message":"196","line":62,"column":6,"nodeType":"190","endLine":62,"endColumn":8,"suggestions":"197"},{"ruleId":"180","severity":1,"message":"198","line":10,"column":18,"nodeType":"182","messageId":"183","endLine":10,"endColumn":32},{"ruleId":"188","severity":1,"message":"199","line":25,"column":6,"nodeType":"190","endLine":25,"endColumn":8,"suggestions":"200"},{"ruleId":"180","severity":1,"message":"201","line":44,"column":11,"nodeType":"182","messageId":"183","endLine":44,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":114,"column":17,"nodeType":"194","endLine":114,"endColumn":197},{"ruleId":"188","severity":1,"message":"202","line":16,"column":6,"nodeType":"190","endLine":16,"endColumn":8,"suggestions":"203"},{"ruleId":"188","severity":1,"message":"204","line":15,"column":6,"nodeType":"190","endLine":15,"endColumn":8,"suggestions":"205"},{"ruleId":"180","severity":1,"message":"206","line":1,"column":40,"nodeType":"182","messageId":"183","endLine":1,"endColumn":48},{"ruleId":"188","severity":1,"message":"204","line":14,"column":6,"nodeType":"190","endLine":14,"endColumn":8,"suggestions":"207"},{"ruleId":"180","severity":1,"message":"208","line":10,"column":9,"nodeType":"182","messageId":"183","endLine":10,"endColumn":13},{"ruleId":"188","severity":1,"message":"209","line":14,"column":6,"nodeType":"190","endLine":14,"endColumn":8,"suggestions":"210"},{"ruleId":"180","severity":1,"message":"206","line":1,"column":40,"nodeType":"182","messageId":"183","endLine":1,"endColumn":48},{"ruleId":"188","severity":1,"message":"211","line":16,"column":6,"nodeType":"190","endLine":16,"endColumn":8,"suggestions":"212"},{"ruleId":"188","severity":1,"message":"213","line":23,"column":6,"nodeType":"190","endLine":23,"endColumn":10,"suggestions":"214"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":29,"nodeType":"182","messageId":"183","endLine":1,"endColumn":38},{"ruleId":"180","severity":1,"message":"187","line":6,"column":10,"nodeType":"182","messageId":"183","endLine":6,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":20,"column":11,"nodeType":"194","endLine":20,"endColumn":117},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'Search' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'style' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStyle'. Either include it or remove the dependency array.","ArrayExpression",["219"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setNewPost' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQuiz'. Either include it or remove the dependency array.",["220"],"'getCurrentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTags'. Either include it or remove the dependency array.",["221"],"'newImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllPosts'. Either include it or remove the dependency array.",["222"],"React Hook useEffect has a missing dependency: 'getInspirationByUser'. Either include it or remove the dependency array.",["223"],"'useState' is defined but never used.",["224"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSubList'. Either include it or remove the dependency array.",["225"],"React Hook useEffect has a missing dependency: 'getSubsByUser'. Either include it or remove the dependency array.",["226"],"React Hook useEffect has missing dependencies: 'getPostsByUserId' and 'getUserSummary'. Either include them or remove the dependency array.",["227"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"236","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [getStyle]",{"range":"245","text":"246"},"Update the dependencies array to be: [getQuiz]",{"range":"247","text":"248"},"Update the dependencies array to be: [getTags]",{"range":"249","text":"250"},"Update the dependencies array to be: [getAllPosts]",{"range":"251","text":"252"},"Update the dependencies array to be: [getInspirationByUser]",{"range":"253","text":"254"},{"range":"255","text":"254"},"Update the dependencies array to be: [getSubList]",{"range":"256","text":"257"},"Update the dependencies array to be: [getSubsByUser]",{"range":"258","text":"259"},"Update the dependencies array to be: [getPostsByUserId, getUserSummary, id]",{"range":"260","text":"261"},[1261,1263],"[getStyle]",[1859,1861],"[getQuiz]",[1061,1063],"[getTags]",[532,534],"[getAllPosts]",[550,552],"[getInspirationByUser]",[634,636],[563,565],"[getSubList]",[517,519],"[getSubsByUser]",[955,959],"[getPostsByUserId, getUserSummary, id]"]