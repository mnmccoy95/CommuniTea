[{"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\index.js":"1","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\App.js":"2","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\reportWebVitals.js":"3","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\AppHeader.js":"4","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\ApplicationViews.js":"6","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\QuizProvider.js":"7","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Register.js":"8","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Quiz.js":"9","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Login.js":"10","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\PostProvider.js":"11","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\TagProvider.js":"12","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\NewPost.js":"13","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Discover.js":"14","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\PostList.js":"15","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\PostCard.js":"16","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\TagList.js":"17","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\TagCard.js":"18","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\utils\\WindowChecker.js":"19","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\PostTagProvider.js":"20","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Search.js":"21","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\InspirationProvider.js":"22","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Inspiration.js":"23","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\InspirationButton.js":"24","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\RemoveInspBtn.js":"25","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\SubscriptionBtn.js":"26","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\SubProvider.js":"27","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Home.js":"28","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\MySubs.js":"29","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\RemoveSubBtn.js":"30","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Profile.js":"31"},{"size":704,"mtime":1612562854307,"results":"32","hashOfConfig":"33"},{"size":501,"mtime":1612562930284,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":2940,"mtime":1612558803316,"results":"36","hashOfConfig":"33"},{"size":3018,"mtime":1612458951802,"results":"37","hashOfConfig":"33"},{"size":3338,"mtime":1612564293660,"results":"38","hashOfConfig":"33"},{"size":821,"mtime":1611952871632,"results":"39","hashOfConfig":"33"},{"size":5348,"mtime":1612477709283,"results":"40","hashOfConfig":"33"},{"size":4442,"mtime":1612381813102,"results":"41","hashOfConfig":"33"},{"size":2135,"mtime":1612477491742,"results":"42","hashOfConfig":"33"},{"size":2773,"mtime":1612565735541,"results":"43","hashOfConfig":"33"},{"size":853,"mtime":1612296254399,"results":"44","hashOfConfig":"33"},{"size":5290,"mtime":1612564710737,"results":"45","hashOfConfig":"33"},{"size":602,"mtime":1612564853951,"results":"46","hashOfConfig":"33"},{"size":309,"mtime":1612461702665,"results":"47","hashOfConfig":"33"},{"size":4616,"mtime":1612564177860,"results":"48","hashOfConfig":"33"},{"size":306,"mtime":1612462192647,"results":"49","hashOfConfig":"33"},{"size":157,"mtime":1612467158174,"results":"50","hashOfConfig":"33"},{"size":185,"mtime":1612209274162,"results":"51","hashOfConfig":"33"},{"size":2016,"mtime":1612296344805,"results":"52","hashOfConfig":"33"},{"size":872,"mtime":1612472657404,"results":"53","hashOfConfig":"33"},{"size":1833,"mtime":1612375547699,"results":"54","hashOfConfig":"33"},{"size":844,"mtime":1612564926889,"results":"55","hashOfConfig":"33"},{"size":1441,"mtime":1612544446172,"results":"56","hashOfConfig":"33"},{"size":759,"mtime":1612550941951,"results":"57","hashOfConfig":"33"},{"size":1532,"mtime":1612550924486,"results":"58","hashOfConfig":"33"},{"size":2419,"mtime":1612549728424,"results":"59","hashOfConfig":"33"},{"size":785,"mtime":1612564867862,"results":"60","hashOfConfig":"33"},{"size":321,"mtime":1612548194320,"results":"61","hashOfConfig":"33"},{"size":896,"mtime":1612550936755,"results":"62","hashOfConfig":"33"},{"size":801,"mtime":1612565554011,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pem0fl",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\index.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\App.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\reportWebVitals.js",[],["134","135"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\AppHeader.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\UserProfileProvider.js",["136"],"import React, { useState, useEffect, createContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Spinner } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const UserProfileContext = createContext();\r\n\r\nexport function UserProfileProvider(props) {\r\n  const apiUrl = \"/api/userprofile\";\r\n  const history = useHistory();\r\n\r\n  const userProfile = localStorage.getItem(\"userProfile\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\r\n\r\n  const [isFirebaseReady, setIsFirebaseReady] = useState(false);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((u) => {\r\n      setIsFirebaseReady(true);\r\n    });\r\n  }, []);\r\n\r\n  const login = (email, pw) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, pw)\r\n      .then((signInResponse) => getUserProfile(signInResponse.user.uid))\r\n      .then((userProfile) => {\r\n        if (userProfile.approved === 1) {\r\n          localStorage.setItem(\"userProfile\", JSON.stringify(userProfile));\r\n          setIsLoggedIn(true);\r\n          return userProfile\r\n        } else if (userProfile.approved === 2) {\r\n          localStorage.setItem(\"userProfile\", JSON.stringify(userProfile))\r\n          setIsLoggedIn(true);\r\n          return userProfile\r\n        }\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    return firebase.auth().signOut()\r\n      .then(() => {\r\n        localStorage.clear()\r\n        setIsLoggedIn(false);\r\n      });\r\n  };\r\n\r\n  const register = (userProfile, password) => {\r\n    return firebase.auth().createUserWithEmailAndPassword(userProfile.email, password)\r\n      .then((createResponse) => saveUser({ ...userProfile, firebaseUserId: createResponse.user.uid }))\r\n      .then((savedUserProfile) => {\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile));\r\n        setIsLoggedIn(true);\r\n      });\r\n  };\r\n\r\n  const getToken = () => firebase.auth().currentUser.getIdToken();\r\n\r\n  const getUserProfile = (firebaseUserId) => {\r\n    return getToken().then((token) =>\r\n      fetch(`${apiUrl}/${firebaseUserId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }).then(resp => resp.json()));\r\n  };\r\n\r\n  const saveUser = (userProfile) => {\r\n    return getToken().then((token) =>\r\n      fetch(apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(userProfile)\r\n      }).then(resp => resp.json()));\r\n  };\r\n\r\n  const getCurrentUser = () => {\r\n    const user = localStorage.getItem(\"userProfile\");\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    return JSON.parse(user);\r\n  };\r\n\r\n  return (\r\n    <UserProfileContext.Provider value={{ isLoggedIn, login, logout, register, getToken, getCurrentUser }}>\r\n      {isFirebaseReady\r\n        ? props.children\r\n        : <Spinner className=\"app-spinner dark\" />}\r\n    </UserProfileContext.Provider>\r\n  );\r\n}","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\ApplicationViews.js",["137","138"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\QuizProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Register.js",["139"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Register.css\"\r\n\r\nconst Register = () => {\r\n  const { register } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pronouns, setPronouns] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const [imageLoading, setImageLoading] = useState(false)\r\n\r\n\r\n  const uploadImage = async e => {\r\n    const files = e.target.files\r\n    setImageLoading(true)\r\n    const data = new FormData()\r\n    data.append('file', files[0])\r\n    data.append('upload_preset', 'vugr9ics')\r\n    const res = await fetch(\r\n      'https://api.cloudinary.com/v1_1/dddadzenw/image/upload/',\r\n      {\r\n        method: \"POST\",\r\n        body: data\r\n      }\r\n    )\r\n    const file = await res.json()\r\n    let image = file.secure_url\r\n    localStorage.setItem(\"image\", image)\r\n\r\n    setImageLoading(false)\r\n    const matches = document.querySelectorAll(\".hidden\");\r\n    for (const m of matches) {\r\n      m.style.display = \"block\"\r\n    }\r\n    document.querySelector(\".notHidden\").style.display = \"none\"\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirm) {\r\n\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const imageLocation = localStorage.getItem(\"image\")\r\n    const profile = {\r\n      displayName,\r\n      email,\r\n      imageLocation,\r\n      pronouns,\r\n      bio\r\n    };\r\n    register(profile, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        history.push(\"/quiz\");\r\n        localStorage.removeItem(\"image\")\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form new-post-form-container\">\r\n      <form onSubmit={handleSubmit} className=\"new-post-form-area\">\r\n        <h2 className=\"text-center\">Register</h2>\r\n        <div className=\"form-group uploadForm\">\r\n          <div className='defaultImageContainer'>\r\n            <img className='defaultImage-register' src={localStorage.image ? localStorage.image : 'https://build.dfomer.com/wp-content/uploads/2016/04/dummy-post-horisontal-thegem-blog-default.jpg'} />\r\n          </div>\r\n\r\n          {imageLoading ? (\r\n            <h6 className=\"loadingImage\">Loading...</h6>\r\n          ) : <></>}\r\n\r\n\r\n          <br />\r\n          <label htmlFor=\"embedpollfileinput\" className=\"btn dangerBtn notHidden uploadButton\">\r\n            Upload image\r\n          </label>\r\n          <input hidden type=\"file\" onChange={uploadImage} className=\"inputfile\" id=\"embedpollfileinput\" />\r\n        </div>\r\n        <div className=\"form-group hidden\">\r\n          <Input\r\n            onChange={(e) => setDisplayName(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"displayName\"\r\n            placeholder=\"Display Name\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group hidden\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group hidden\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group hidden\">\r\n          <Input\r\n            onChange={(e) => setConfirm(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group hidden\">\r\n          <Input\r\n            onChange={(e) => setPronouns(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"pronouns\"\r\n            placeholder=\"Pronouns\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group hidden\">\r\n          <Input\r\n            onChange={(e) => setBio(e.target.value)}\r\n            type=\"textarea\"\r\n            className=\"form-control\"\r\n            name=\"bio\"\r\n            rows=\"5\"\r\n            placeholder=\"Bio\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group hidden submitContainer\">\r\n          <Button type=\"submit\" className=\"dangerBtn btn\" disabled={loading}>\r\n            Sign Up\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Already have an account?\r\n          <div>\r\n            <Link to=\"/login\">Log in here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Quiz.js",["140","141"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { QuizContext } from \"../providers/QuizProvider\"\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport \"./Quiz.css\"\r\nimport WindowChecker from \"../utils/WindowChecker\";\r\n\r\nconst Quiz = () => {\r\n  const [newPost, setNewPost] = useState([]);\r\n  const { getToken, logout } = useContext(UserProfileContext);\r\n  const history = useHistory();\r\n\r\n  const handleSubmitQuiz = (e) => {\r\n    e.preventDefault();\r\n    const answers = []\r\n    for (const id of newPost) {\r\n      if (id !== undefined) {\r\n        answers.push(parseInt(id))\r\n      }\r\n    }\r\n\r\n    return getToken().then((token) =>\r\n      fetch(`/api/userprofile/answer`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(answers)\r\n      }).then(resp => resp.json())\r\n        .then((resp) => {\r\n          if (resp.approved === 1) {\r\n            localStorage.setItem(\"userProfile\", JSON.stringify(resp))\r\n            history.push(\"/discover\")\r\n            window.location.reload()\r\n\r\n          } else {\r\n            logout()\r\n          }\r\n        }))\r\n  }\r\n\r\n  const handleControlledInputChange = (event) => {\r\n    newPost[event.target.name] = event.target.id\r\n  }\r\n\r\n  // const handleControlledCheckChange = (event) => {\r\n  //   if (event.target.checked === true) {\r\n  //     newPost[event.target.name] += (event.target.id)\r\n  //   } else {\r\n  //     newPost[event.target.name] -= (event.target.id)\r\n  //   }\r\n  // }\r\n\r\n  const { quiz, getQuiz } = useContext(QuizContext);\r\n\r\n  useEffect(() => {\r\n    WindowChecker()\r\n    getQuiz();\r\n  }, [])\r\n\r\n  const QuestionCard = ({ question }) => {\r\n\r\n    const questionCard = (q) => {\r\n      if (q.questionType.name === \"MultipleChoice\") {\r\n        return (<>\r\n          <fieldset className=\"questionBox\" id={q.id}>\r\n            <div className=\"form-group\">\r\n              <div className=\"questionTitle\">{q.content}</div>\r\n              {q.answers.map((a) => {\r\n                return (<>\r\n                  <input type=\"radio\" className=\"quizAnswer\" value={a.id} name={q.id} id={a.id} required=\"required\"\r\n                    onChange={(e) => { handleControlledInputChange(e) }}></input>\r\n                  <label htmlFor={a.id}>{a.content}</label><br />\r\n                </>)\r\n              })}\r\n            </div>\r\n          </fieldset>\r\n        </>\r\n        )\r\n      } else if (q.questionType.name === \"TrueFalse\") {\r\n        return (<>\r\n          <fieldset className=\"questionBox\" id={q.id}>\r\n            <div className=\"form-group\">\r\n              <div className=\"questionTitle\">{q.content}</div>\r\n              {q.answers.map((a) => {\r\n                return (<>\r\n                  <input type=\"radio\" className=\"quizAnswer\" value={a.id} name={q.id} id={a.id} required=\"required\"\r\n                    onChange={(e) => { handleControlledInputChange(e) }}></input>\r\n                  <label htmlFor={a.id}>{a.content}</label><br />\r\n                </>)\r\n              })}\r\n            </div>\r\n          </fieldset>\r\n        </>\r\n        )\r\n      }\r\n      // else if (q.questionType.name === \"MultipleAnswer\") {\r\n      //   return (<>\r\n      //     <fieldset id={q.id}>\r\n      //       <div>{q.content}</div>\r\n      //       {q.answers.map((a) => {\r\n      //         return (<>\r\n      //           <input type=\"checkbox\" class=\"check\" value={a.id} name={q.id} id={a.id}\r\n      //             onChange={(e) => { handleControlledCheckChange(e) }}\r\n      //             defaultChecked={false}></input>\r\n      //           <label htmlFor={a.id}>{a.content}</label><br />\r\n      //         </>)\r\n      //       })}\r\n      //     </fieldset>\r\n      //   </>\r\n      //   )\r\n      // }\r\n    }\r\n\r\n    return (\r\n      <>\r\n        { questionCard(question)}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <section className=\"new-post-form-container\">\r\n      <div className=\"new-post-form-area\">\r\n        <h2 className=\"new-post-form-title\">Quiz Time!</h2>\r\n        <form className=\"quiz-form\">\r\n          {quiz.map((q) => (\r\n\r\n            <QuestionCard key={q.id} question={q} />\r\n\r\n          ))}\r\n          <button className=\"btn btn-quiz-submit\" onClick={(e) => { handleSubmitQuiz(e) }}>Submit Quiz</button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Quiz;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Login.js",["142"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\n\r\nconst Login = () => {\r\n  const { login, getCurrentUser } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    login(email, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        if (user.approved === 2) {\r\n          history.push(\"/quiz\")\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form new-post-form-container\" >\r\n      <form onSubmit={handleSubmit} className=\"new-post-form-area\">\r\n        <h2 className=\"text-center\">Login</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group submitContainer\">\r\n          <Button type=\"submit\" className=\"dangerBtn btn\" disabled={loading}>\r\n            Sign in\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Don't have an account?\r\n          <div>\r\n            <Link to=\"/register\">Sign up here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\PostProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\TagProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\NewPost.js",["143","144","145"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Discover.js",["146"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\PostList.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\PostCard.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\TagList.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\TagCard.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\utils\\WindowChecker.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\PostTagProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Search.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\InspirationProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Inspiration.js",["147","148","149","150"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\InspirationButton.js",["151"],"import React, { useContext, useEffect } from \"react\";\r\nimport { InspirationContext } from \"../providers/InspirationProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport \"./PostCard.css\"\r\n\r\nconst InspirationButton = ({ id }) => {\r\n  const { inspiration, getInspirationByUser, addInspiration, deleteInspiration } = useContext(InspirationContext);\r\n  const { getCurrentUser } = useContext(UserProfileContext);\r\n  const user = getCurrentUser();\r\n\r\n  useEffect(() => {\r\n    getInspirationByUser()\r\n  }, [])\r\n\r\n  const addInsp = (event) => {\r\n    const postId = parseInt(event.target.id)\r\n    const userProfileId = parseInt(user.id)\r\n    const insp = {\r\n      postId, userProfileId\r\n    }\r\n    addInspiration(insp)\r\n  }\r\n\r\n  const deleteInsp = (event) => {\r\n    const postId = parseInt(event.target.id)\r\n    deleteInspiration(postId)\r\n  }\r\n\r\n  const inspChecker = () => {\r\n    const inspExist = inspiration.map((i) => { return i.id });\r\n    if (inspExist.includes(id)) {\r\n      return (<button id={id} onClick={(e) => { deleteInsp(e) }} className=\"removeInsp btn btn-lg\"><i id={id} className=\"fas fa-heart fa-2x\"></i></button>)\r\n    } else {\r\n      return (<button id={id} onClick={(e) => { addInsp(e) }} className=\"addInsp btn btn-lg\"><i id={id} className=\"fas fa-heart fa-2x\"></i></button>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {inspChecker()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InspirationButton;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\RemoveInspBtn.js",["152"],"import React, { useContext } from \"react\";\r\nimport { InspirationContext } from \"../providers/InspirationProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport \"./PostCard.css\"\r\n\r\nconst RemoveInspBtn = ({ id }) => {\r\n  const { deleteInspiration } = useContext(InspirationContext);\r\n  const { getCurrentUser } = useContext(UserProfileContext);\r\n  const user = getCurrentUser();\r\n\r\n\r\n  const deleteInsp = (event) => {\r\n    const postId = parseInt(event.target.id)\r\n    deleteInspiration(postId)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button id={id} onClick={(e) => { deleteInsp(e) }} className=\"removeInsp btn btn-lg\"><i id={id} className=\"fas fa-heart fa-2x\"></i></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemoveInspBtn;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\SubscriptionBtn.js",["153"],"import React, { useContext, useEffect } from \"react\";\r\nimport { SubContext } from \"../providers/SubProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\nimport \"./PostCard.css\"\r\n\r\nconst SubscriptionButton = ({ post }) => {\r\n  const { rawSubs, getSubList, addSub, deleteSub } = useContext(SubContext);\r\n  const { getCurrentUser } = useContext(UserProfileContext);\r\n  const user = getCurrentUser();\r\n\r\n  useEffect(() => {\r\n    getSubList()\r\n  }, [])\r\n\r\n  const addSubscription = (event) => {\r\n    const providerUserProfileId = parseInt(event.target.id)\r\n    const subscriberUserProfileId = parseInt(user.id)\r\n    const sub = {\r\n      providerUserProfileId, subscriberUserProfileId\r\n    }\r\n    addSub(sub)\r\n  }\r\n\r\n  const deleteSubscription = (event) => {\r\n    const providerUserProfileId = parseInt(event.target.id)\r\n    const subscriberUserProfileId = parseInt(user.id)\r\n    deleteSub(providerUserProfileId, subscriberUserProfileId)\r\n  }\r\n\r\n  const subChecker = () => {\r\n    const subExist = rawSubs.map((s) => { return s.providerUserProfileId })\r\n    if (subExist.includes(post.authorId)) {\r\n      return (<button id={post.authorId} className=\"cancelBtn btn\" onClick={(e) => { deleteSubscription(e) }}>Unsubscribe</button>)\r\n    } else {\r\n      return (<button id={post.authorId} className=\"dangerBtn btn\" onClick={(e) => { addSubscription(e) }}>Subscribe</button>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"subBtn\">\r\n      {subChecker()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscriptionButton;","C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\providers\\SubProvider.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Home.js",["154","155","156"],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\MySubs.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\components\\RemoveSubBtn.js",[],"C:\\Users\\xshin\\workspace\\CommuniTea\\client\\src\\pages\\Profile.js",["157"],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":11,"column":9,"nodeType":"164","messageId":"165","endLine":11,"endColumn":16},{"ruleId":"162","severity":1,"message":"166","line":13,"column":8,"nodeType":"164","messageId":"165","endLine":13,"endColumn":14},{"ruleId":"162","severity":1,"message":"167","line":21,"column":11,"nodeType":"164","messageId":"165","endLine":21,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":83,"column":13,"nodeType":"170","endLine":83,"endColumn":202},{"ruleId":"162","severity":1,"message":"171","line":9,"column":19,"nodeType":"164","messageId":"165","endLine":9,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":60,"column":6,"nodeType":"174","endLine":60,"endColumn":8,"suggestions":"175"},{"ruleId":"162","severity":1,"message":"176","line":8,"column":18,"nodeType":"164","messageId":"165","endLine":8,"endColumn":32},{"ruleId":"172","severity":1,"message":"177","line":23,"column":6,"nodeType":"174","endLine":23,"endColumn":8,"suggestions":"178"},{"ruleId":"162","severity":1,"message":"179","line":42,"column":11,"nodeType":"164","messageId":"165","endLine":42,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":108,"column":17,"nodeType":"170","endLine":108,"endColumn":197},{"ruleId":"172","severity":1,"message":"180","line":14,"column":6,"nodeType":"174","endLine":14,"endColumn":8,"suggestions":"181"},{"ruleId":"162","severity":1,"message":"182","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":19},{"ruleId":"162","severity":1,"message":"183","line":4,"column":21,"nodeType":"164","messageId":"165","endLine":4,"endColumn":24},{"ruleId":"162","severity":1,"message":"184","line":4,"column":26,"nodeType":"164","messageId":"165","endLine":4,"endColumn":29},{"ruleId":"172","severity":1,"message":"185","line":14,"column":6,"nodeType":"174","endLine":14,"endColumn":8,"suggestions":"186"},{"ruleId":"172","severity":1,"message":"185","line":13,"column":6,"nodeType":"174","endLine":13,"endColumn":8,"suggestions":"187"},{"ruleId":"162","severity":1,"message":"188","line":9,"column":9,"nodeType":"164","messageId":"165","endLine":9,"endColumn":13},{"ruleId":"172","severity":1,"message":"189","line":13,"column":6,"nodeType":"174","endLine":13,"endColumn":8,"suggestions":"190"},{"ruleId":"162","severity":1,"message":"191","line":1,"column":40,"nodeType":"164","messageId":"165","endLine":1,"endColumn":48},{"ruleId":"162","severity":1,"message":"192","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":14},{"ruleId":"172","severity":1,"message":"193","line":15,"column":6,"nodeType":"174","endLine":15,"endColumn":8,"suggestions":"194"},{"ruleId":"172","severity":1,"message":"195","line":15,"column":6,"nodeType":"174","endLine":15,"endColumn":8,"suggestions":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'Search' is defined but never used.","'isLoggedIn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setNewPost' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getQuiz'. Either include it or remove the dependency array.","ArrayExpression",["199"],"'getCurrentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTags'. Either include it or remove the dependency array.",["200"],"'newImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllPosts'. Either include it or remove the dependency array.",["201"],"'Container' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'getInspirationByUser'. Either include it or remove the dependency array.",["202"],["203"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSubList'. Either include it or remove the dependency array.",["204"],"'useState' is defined but never used.","'MySubs' is defined but never used.","React Hook useEffect has a missing dependency: 'getSubsByUser'. Either include it or remove the dependency array.",["205"],"React Hook useEffect has missing dependencies: 'getPostsByUserId' and 'id'. Either include them or remove the dependency array.",["206"],"no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"213","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [getQuiz]",{"range":"222","text":"223"},"Update the dependencies array to be: [getTags]",{"range":"224","text":"225"},"Update the dependencies array to be: [getAllPosts]",{"range":"226","text":"227"},"Update the dependencies array to be: [getInspirationByUser]",{"range":"228","text":"229"},{"range":"230","text":"229"},"Update the dependencies array to be: [getSubList]",{"range":"231","text":"232"},"Update the dependencies array to be: [getSubsByUser]",{"range":"233","text":"234"},"Update the dependencies array to be: [getPostsByUserId, id]",{"range":"235","text":"236"},[1764,1766],"[getQuiz]",[929,931],"[getTags]",[426,428],"[getAllPosts]",[494,496],"[getInspirationByUser]",[534,536],[473,475],"[getSubList]",[455,457],"[getSubsByUser]",[483,485],"[getPostsByUserId, id]"]